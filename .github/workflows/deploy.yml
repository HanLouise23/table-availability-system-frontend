name: TAS Frontend â€“ Build & Deploy to S3 + CloudFront

on:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  CF_DIST_ID: ${{ secrets.CF_DIST_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      # Pass prod API base to Vite at build time
      - name: Build
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        run: npm run build

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 1) Sync everything except index.html with a long cache
      - name: Sync assets (hashed files) with long cache
        run: |
          aws s3 sync dist s3://$S3_BUCKET \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      # 2) Upload index.html with no-cache (so SPA shell updates instantly)
      - name: Upload index.html with no-cache
        run: |
          aws s3 cp dist/index.html s3://$S3_BUCKET/index.html \
            --cache-control "no-store, no-cache, must-revalidate, max-age=0" \
            --content-type "text/html; charset=utf-8"

      # 3) Invalidate CloudFront so users get the new build
      - name: Create CloudFront invalidation
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CF_DIST_ID \
            --paths "/*"
